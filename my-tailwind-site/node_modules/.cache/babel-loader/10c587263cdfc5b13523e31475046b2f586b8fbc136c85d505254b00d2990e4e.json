{"ast":null,"code":"// export async function fetchImageList() {\n//     const res = await fetch('http://220.149.235.221:4000/api/images/');\n//     const html = await res.text();\n//     const parser = new DOMParser();\n//     const doc = parser.parseFromString(html, 'text/html');\n//     const links = Array.from(doc.querySelectorAll('a'))\n//       .map(a => a.getAttribute('href'))\n//       .filter(name => name?.startsWith('frame_') && name.endsWith('.jpg'));\n//     const sorted = links.sort((a, b) => {\n//       const getTime = f => {\n//         const match = f.match(/frame_(\\d+)\\.jpg/);\n//         return match ? parseInt(match[1]) : 0;\n//       };\n//       return getTime(b) - getTime(a);\n//     });\n//     return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n//   }\nexport async function fetchImageList(){const res=await fetch('http://220.149.235.221:4000/api/images/');const json=await res.json();// JSON으로 파싱\nconst sorted=json.filter(name=>name.startsWith('frame_')&&name.endsWith('.jpg')).sort((a,b)=>{const getTime=f=>{const match=f.match(/frame_(\\d+)\\.jpg/);return match?parseInt(match[1]):0;};return getTime(b)-getTime(a);});return sorted.map(name=>`http://220.149.235.221:4000/api/images/${name}`);}","map":{"version":3,"names":["fetchImageList","res","fetch","json","sorted","filter","name","startsWith","endsWith","sort","a","b","getTime","f","match","parseInt","map"],"sources":["/home/getout/workspace/my-tailwind-site/src/utils/imageFetcher.js"],"sourcesContent":["// export async function fetchImageList() {\n//     const res = await fetch('http://220.149.235.221:4000/api/images/');\n//     const html = await res.text();\n  \n//     const parser = new DOMParser();\n//     const doc = parser.parseFromString(html, 'text/html');\n//     const links = Array.from(doc.querySelectorAll('a'))\n//       .map(a => a.getAttribute('href'))\n//       .filter(name => name?.startsWith('frame_') && name.endsWith('.jpg'));\n  \n//     const sorted = links.sort((a, b) => {\n//       const getTime = f => {\n//         const match = f.match(/frame_(\\d+)\\.jpg/);\n//         return match ? parseInt(match[1]) : 0;\n//       };\n//       return getTime(b) - getTime(a);\n//     });\n  \n//     return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n//   }\nexport async function fetchImageList() {\n  const res = await fetch('http://220.149.235.221:4000/api/images/');\n  const json = await res.json();  // JSON으로 파싱\n\n  const sorted = json\n    .filter(name => name.startsWith('frame_') && name.endsWith('.jpg'))\n    .sort((a, b) => {\n      const getTime = f => {\n        const match = f.match(/frame_(\\d+)\\.jpg/);\n        return match ? parseInt(match[1]) : 0;\n      };\n      return getTime(b) - getTime(a);\n    });\n\n  return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAO,eAAe,CAAAA,cAAcA,CAAA,CAAG,CACrC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAC,CAClE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACE,IAAI,CAAC,CAAC,CAAG;AAEhC,KAAM,CAAAC,MAAM,CAAGD,IAAI,CAChBE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAID,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAClEC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACd,KAAM,CAAAC,OAAO,CAAGC,CAAC,EAAI,CACnB,KAAM,CAAAC,KAAK,CAAGD,CAAC,CAACC,KAAK,CAAC,kBAAkB,CAAC,CACzC,MAAO,CAAAA,KAAK,CAAGC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAG,CAAC,CACvC,CAAC,CACD,MAAO,CAAAF,OAAO,CAACD,CAAC,CAAC,CAAGC,OAAO,CAACF,CAAC,CAAC,CAChC,CAAC,CAAC,CAEJ,MAAO,CAAAN,MAAM,CAACY,GAAG,CAACV,IAAI,EAAI,0CAA0CA,IAAI,EAAE,CAAC,CAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}