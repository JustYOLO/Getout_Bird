{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ImageSection=()=>{const[latestImage,setLatestImage]=useState(null);const[analyzedImage,setAnalyzedImage]=useState(null);useEffect(()=>{const fetchImages=()=>{fetch('http://220.149.235.221:4000/api/images').then(res=>res.json()).then(fileList=>{const sorted=fileList.filter(name=>name.startsWith('frame_')&&name.endsWith('.jpg')).sort((a,b)=>{const getTime=f=>{const match=f.match(/frame_(\\d+)(?:_result)?\\.jpg/);return match?parseInt(match[1]):0;};return getTime(b)-getTime(a);});if(sorted.length>0){setLatestImage(`http://220.149.235.221:4000/images/${sorted[0]}`);}else{setLatestImage(null);}}).catch(err=>{console.error(\"이미지 불러오기 실패:\",err);setLatestImage(null);});fetch('http://220.149.235.221:4000/api/images_result').then(res=>res.json()).then(fileList=>{const sorted=fileList.filter(name=>name.endsWith('.jpg')).sort((a,b)=>{const getTime=f=>{const match=f.match(/frame_(\\d+)(?:_result)?\\.jpg/);return match?parseInt(match[1]):0;};return getTime(b)-getTime(a);});if(sorted.length>0){setAnalyzedImage(`http://220.149.235.221:4000/images_result/${sorted[sorted.length-1]}`);}else{setAnalyzedImage(null);}}).catch(err=>{console.error(\"❌ 분석 이미지 불러오기 실패:\",err);setAnalyzedImage(null);});};fetchImages();const interval=setInterval(()=>{fetchImages();},5000);return()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 grid grid-rows-2 gap-12\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center font-bold text-lg mb-3\",children:\"\\uCD5C\\uADFC\\uC5D0 \\uCC0D\\uD78C \\uC0AC\\uC9C4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-black h-72 flex items-center justify-center\",children:latestImage?/*#__PURE__*/_jsx(\"img\",{src:latestImage,alt:\"\\uCD5C\\uADFC \\uC774\\uBBF8\\uC9C0\",className:\"max-h-full object-contain\",onError:()=>console.log(\"❌ 이미지 로딩 실패:\",latestImage)}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"\\uC774\\uBBF8\\uC9C0\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center font-bold text-lg mb-3\",children:\"AI\\uAC00 \\uBD84\\uC11D\\uD55C \\uC0AC\\uC9C4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-black h-72 flex items-center justify-center\",children:analyzedImage?/*#__PURE__*/_jsx(\"img\",{src:analyzedImage,alt:\"AI \\uBD84\\uC11D \\uC774\\uBBF8\\uC9C0\",className:\"max-h-full object-contain\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"\\uBD84\\uC11D \\uC774\\uBBF8\\uC9C0\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center font-bold text-lg mb-3\",children:\"\\uCD5C\\uADFC\\uC5D0 \\uB179\\uC74C\\uB41C \\uC74C\\uC131\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-black h-36 flex items-center justify-center text-sm\",children:\"\\uC624\\uB514\\uC624 \\uD45C\\uC2DC \\uC601\\uC5ED\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center font-bold text-lg mb-3\",children:\"AI\\uAC00 \\uBD84\\uC11D\\uD55C \\uC74C\\uC131\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-black h-36 flex items-center justify-center text-sm\",children:\"\\uC624\\uB514\\uC624 \\uD45C\\uC2DC \\uC601\\uC5ED\"})]})]})]});};export default ImageSection;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","ImageSection","latestImage","setLatestImage","analyzedImage","setAnalyzedImage","fetchImages","fetch","then","res","json","fileList","sorted","filter","name","startsWith","endsWith","sort","a","b","getTime","f","match","parseInt","length","catch","err","console","error","interval","setInterval","clearInterval","className","children","src","alt","onError","log"],"sources":["/home/getout/workspace/my-tailwind-site/src/components/ImageSection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ImageSection = () => {\n  const [latestImage, setLatestImage] = useState(null);\n  const [analyzedImage, setAnalyzedImage] = useState(null);\n\n  useEffect(() => {\n    const fetchImages = () => {\n      fetch('http://220.149.235.221:4000/api/images')\n        .then(res => res.json())\n        .then(fileList => {\n          const sorted = fileList\n            .filter(name => name.startsWith('frame_') && name.endsWith('.jpg'))\n            .sort((a, b) => {\n              const getTime = f => {\n                const match = f.match(/frame_(\\d+)(?:_result)?\\.jpg/);\n                return match ? parseInt(match[1]) : 0;\n              };\n              return getTime(b) - getTime(a);\n            });\n\n          if (sorted.length > 0) {\n            setLatestImage(`http://220.149.235.221:4000/images/${sorted[0]}`);\n          } else {\n            setLatestImage(null);\n          }\n        })\n        .catch(err => {\n          console.error(\"이미지 불러오기 실패:\", err);\n          setLatestImage(null);\n        });\n\n      fetch('http://220.149.235.221:4000/api/images_result')\n        .then(res => res.json())\n        .then(fileList => {\n          const sorted = fileList\n            .filter(name => name.endsWith('.jpg'))\n            .sort((a, b) => {\n              const getTime = f => {\n                const match = f.match(/frame_(\\d+)(?:_result)?\\.jpg/);\n                return match ? parseInt(match[1]) : 0;\n              };\n              return getTime(b) - getTime(a);\n            });\n\n          if (sorted.length > 0) {\n            setAnalyzedImage(`http://220.149.235.221:4000/images_result/${sorted[sorted.length - 1]}`);\n          } else {\n            setAnalyzedImage(null);\n          }\n        })\n        .catch(err => {\n          console.error(\"❌ 분석 이미지 불러오기 실패:\", err);\n          setAnalyzedImage(null);\n        });\n    };\n\n    fetchImages();\n\n    const interval = setInterval(() => {\n      fetchImages();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"p-8 grid grid-rows-2 gap-12\">\n      <div className=\"grid grid-cols-2 gap-6\">\n        <div>\n          <div className=\"text-center font-bold text-lg mb-3\">최근에 찍힌 사진</div>\n          <div className=\"border border-black h-72 flex items-center justify-center\">\n            {latestImage ? (\n              <img\n                src={latestImage}\n                alt=\"최근 이미지\"\n                className=\"max-h-full object-contain\"\n                onError={() => console.log(\"❌ 이미지 로딩 실패:\", latestImage)}\n              />\n            ) : (\n              <span className=\"text-gray-500\">이미지를 불러오는 중...</span>\n            )}\n          </div>\n        </div>\n        <div>\n          <div className=\"text-center font-bold text-lg mb-3\">AI가 분석한 사진</div>\n          <div className=\"border border-black h-72 flex items-center justify-center\">\n            {analyzedImage ? (\n              <img\n                src={analyzedImage}\n                alt=\"AI 분석 이미지\"\n                className=\"max-h-full object-contain\"\n              />\n            ) : (\n              <span className=\"text-gray-500\">분석 이미지를 불러오는 중...</span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-6\">\n        <div>\n          <div className=\"text-center font-bold text-lg mb-3\">최근에 녹음된 음성</div>\n          <div className=\"border border-black h-36 flex items-center justify-center text-sm\">\n            오디오 표시 영역\n          </div>\n        </div>\n        <div>\n          <div className=\"text-center font-bold text-lg mb-3\">AI가 분석한 음성</div>\n          <div className=\"border border-black h-36 flex items-center justify-center text-sm\">\n            오디오 표시 영역\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}