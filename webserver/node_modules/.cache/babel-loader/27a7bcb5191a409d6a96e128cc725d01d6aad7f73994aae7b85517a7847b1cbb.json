{"ast":null,"code":"var _jsxFileName = \"/home/getout/workspace/my-tailwind-site/src/pages/latest_image.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchImageList } from '../utils/imageFetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Latest_image = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetchImageList().then(setImages);\n  }, []);\n\n  // 타임스탬프 → 날짜 문자열 변환 함수\n  const formatDate = ts => {\n    const date = new Date(ts);\n    return date.toLocaleString('ko-KR');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-screen-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"\\uC804\\uCCB4 \\uC800\\uC7A5\\uB41C \\uC774\\uBBF8\\uC9C0 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-6\",\n      children: images.map((img, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2 text-center space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.url,\n          alt: img.name,\n          className: \"h-48 object-contain mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-800 font-semibold\",\n          children: img.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: formatDate(img.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Latest_image, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = Latest_image;\nexport default latest_image;\nvar _c;\n$RefreshReg$(_c, \"Latest_image\");","map":{"version":3,"names":["React","useEffect","useState","fetchImageList","jsxDEV","_jsxDEV","Latest_image","_s","images","setImages","then","formatDate","ts","date","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","img","idx","src","url","alt","name","timestamp","_c","latest_image","$RefreshReg$"],"sources":["/home/getout/workspace/my-tailwind-site/src/pages/latest_image.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchImageList } from '../utils/imageFetcher';\n\nconst Latest_image = () => {\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    fetchImageList().then(setImages);\n  }, []);\n\n  // 타임스탬프 → 날짜 문자열 변환 함수\n  const formatDate = (ts) => {\n    const date = new Date(ts);\n    return date.toLocaleString('ko-KR');\n  };\n\n  return (\n    <div className=\"p-6 max-w-screen-xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">전체 저장된 이미지 목록</h1>\n      <div className=\"grid grid-cols-3 gap-6\">\n        {images.map((img, idx) => (\n          <div key={idx} className=\"border p-2 text-center space-y-2\">\n            <img src={img.url} alt={img.name} className=\"h-48 object-contain mx-auto\" />\n            <div className=\"text-sm text-gray-800 font-semibold\">{img.name}</div>\n            <div className=\"text-xs text-gray-500\">{formatDate(img.timestamp)}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default latest_image;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdE,cAAc,CAAC,CAAC,CAACO,IAAI,CAACD,SAAS,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,EAAE,CAAC;IACzB,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,CAAC;EACrC,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CZ,OAAA;MAAIW,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DhB,OAAA;MAAKW,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCT,MAAM,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACnBnB,OAAA;QAAeW,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBACzDZ,OAAA;UAAKoB,GAAG,EAAEF,GAAG,CAACG,GAAI;UAACC,GAAG,EAAEJ,GAAG,CAACK,IAAK;UAACZ,SAAS,EAAC;QAA6B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5EhB,OAAA;UAAKW,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAEM,GAAG,CAACK;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrEhB,OAAA;UAAKW,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEN,UAAU,CAACY,GAAG,CAACM,SAAS;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAHhEG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA6BlB,eAAeyB,YAAY;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}