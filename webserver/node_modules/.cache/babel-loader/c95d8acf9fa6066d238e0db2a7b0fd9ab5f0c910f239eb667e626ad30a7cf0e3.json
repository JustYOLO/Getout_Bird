{"ast":null,"code":"// export async function fetchImageList() {\n//     const res = await fetch('http://220.149.235.221:4000/api/images/');\n//     const html = await res.text();\n\n//     const parser = new DOMParser();\n//     const doc = parser.parseFromString(html, 'text/html');\n//     const links = Array.from(doc.querySelectorAll('a'))\n//       .map(a => a.getAttribute('href'))\n//       .filter(name => name?.startsWith('frame_') && name.endsWith('.jpg'));\n\n//     const sorted = links.sort((a, b) => {\n//       const getTime = f => {\n//         const match = f.match(/frame_(\\d+)\\.jpg/);\n//         return match ? parseInt(match[1]) : 0;\n//       };\n//       return getTime(b) - getTime(a);\n//     });\n\n//     return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n//   }\nexport async function fetchImageList() {\n  const res = await fetch('http://220.149.235.221:4000/api/images/');\n  const json = await res.json(); // JSON으로 파싱\n\n  const sorted = json.filter(name => name.startsWith('frame_') && name.endsWith('.jpg')).sort((a, b) => {\n    const getTime = f => {\n      const match = f.match(/frame_(\\d+)\\.jpg/);\n      return match ? parseInt(match[1]) : 0;\n    };\n    return getTime(b) - getTime(a);\n  });\n  return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n}","map":{"version":3,"names":["fetchImageList","res","fetch","json","sorted","filter","name","startsWith","endsWith","sort","a","b","getTime","f","match","parseInt","map"],"sources":["/home/getout/workspace/my-tailwind-site/src/utils/imageFetcher.js"],"sourcesContent":["// export async function fetchImageList() {\n//     const res = await fetch('http://220.149.235.221:4000/api/images/');\n//     const html = await res.text();\n  \n//     const parser = new DOMParser();\n//     const doc = parser.parseFromString(html, 'text/html');\n//     const links = Array.from(doc.querySelectorAll('a'))\n//       .map(a => a.getAttribute('href'))\n//       .filter(name => name?.startsWith('frame_') && name.endsWith('.jpg'));\n  \n//     const sorted = links.sort((a, b) => {\n//       const getTime = f => {\n//         const match = f.match(/frame_(\\d+)\\.jpg/);\n//         return match ? parseInt(match[1]) : 0;\n//       };\n//       return getTime(b) - getTime(a);\n//     });\n  \n//     return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n//   }\nexport async function fetchImageList() {\n  const res = await fetch('http://220.149.235.221:4000/api/images/');\n  const json = await res.json();  // JSON으로 파싱\n\n  const sorted = json\n    .filter(name => name.startsWith('frame_') && name.endsWith('.jpg'))\n    .sort((a, b) => {\n      const getTime = f => {\n        const match = f.match(/frame_(\\d+)\\.jpg/);\n        return match ? parseInt(match[1]) : 0;\n      };\n      return getTime(b) - getTime(a);\n    });\n\n  return sorted.map(name => `http://220.149.235.221:4000/api/images/${name}`);\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,eAAeA,cAAcA,CAAA,EAAG;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;EAClE,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAAE;;EAEhC,MAAMC,MAAM,GAAGD,IAAI,CAChBE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,IAAID,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAClEC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,MAAMC,OAAO,GAAGC,CAAC,IAAI;MACnB,MAAMC,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACzC,OAAOA,KAAK,GAAGC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACvC,CAAC;IACD,OAAOF,OAAO,CAACD,CAAC,CAAC,GAAGC,OAAO,CAACF,CAAC,CAAC;EAChC,CAAC,CAAC;EAEJ,OAAON,MAAM,CAACY,GAAG,CAACV,IAAI,IAAI,0CAA0CA,IAAI,EAAE,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}