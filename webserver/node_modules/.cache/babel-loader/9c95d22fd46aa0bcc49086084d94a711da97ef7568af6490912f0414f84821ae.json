{"ast":null,"code":"export async function fetchImageList(){const res=await fetch('http://220.149.235.221:4000/api/images/');const html=await res.text();const parser=new DOMParser();const doc=parser.parseFromString(html,'text/html');const links=Array.from(doc.querySelectorAll('a')).map(a=>a.getAttribute('href')).filter(name=>(name===null||name===void 0?void 0:name.startsWith('frame_'))&&name.endsWith('.jpg'));const sorted=links.sort((a,b)=>{const getTime=f=>{const match=f.match(/frame_(\\d+)\\.jpg/);return match?parseInt(match[1]):0;};return getTime(b)-getTime(a);});// 👇 파일명과 전체 URL을 함께 반환\nreturn sorted.map(name=>({name,url:`http://220.149.235.221:4000/api/images/${name}`,timestamp:parseInt(name.match(/frame_(\\d+)\\.jpg/)[1])}));}","map":{"version":3,"names":["fetchImageList","res","fetch","html","text","parser","DOMParser","doc","parseFromString","links","Array","from","querySelectorAll","map","a","getAttribute","filter","name","startsWith","endsWith","sorted","sort","b","getTime","f","match","parseInt","url","timestamp"],"sources":["/home/getout/workspace/my-tailwind-site/src/utils/imageFetcher.js"],"sourcesContent":["export async function fetchImageList() {\n    const res = await fetch('http://220.149.235.221:4000/api/images/');\n    const html = await res.text();\n  \n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const links = Array.from(doc.querySelectorAll('a'))\n      .map(a => a.getAttribute('href'))\n      .filter(name => name?.startsWith('frame_') && name.endsWith('.jpg'));\n  \n    const sorted = links.sort((a, b) => {\n      const getTime = f => {\n        const match = f.match(/frame_(\\d+)\\.jpg/);\n        return match ? parseInt(match[1]) : 0;\n      };\n      return getTime(b) - getTime(a);\n    });\n  \n    // 👇 파일명과 전체 URL을 함께 반환\n    return sorted.map(name => ({\n      name,\n      url: `http://220.149.235.221:4000/api/images/${name}`,\n      timestamp: parseInt(name.match(/frame_(\\d+)\\.jpg/)[1])\n    }));\n  }"],"mappings":"AAAA,MAAO,eAAe,CAAAA,cAAcA,CAAA,CAAG,CACnC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAC,CAClE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAE7B,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAC,GAAG,CAAGF,MAAM,CAACG,eAAe,CAACL,IAAI,CAAE,WAAW,CAAC,CACrD,KAAM,CAAAM,KAAK,CAAGC,KAAK,CAACC,IAAI,CAACJ,GAAG,CAACK,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAChDC,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,YAAY,CAAC,MAAM,CAAC,CAAC,CAChCC,MAAM,CAACC,IAAI,EAAI,CAAAA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,UAAU,CAAC,QAAQ,CAAC,GAAID,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAEtE,KAAM,CAAAC,MAAM,CAAGX,KAAK,CAACY,IAAI,CAAC,CAACP,CAAC,CAAEQ,CAAC,GAAK,CAClC,KAAM,CAAAC,OAAO,CAAGC,CAAC,EAAI,CACnB,KAAM,CAAAC,KAAK,CAAGD,CAAC,CAACC,KAAK,CAAC,kBAAkB,CAAC,CACzC,MAAO,CAAAA,KAAK,CAAGC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAG,CAAC,CACvC,CAAC,CACD,MAAO,CAAAF,OAAO,CAACD,CAAC,CAAC,CAAGC,OAAO,CAACT,CAAC,CAAC,CAChC,CAAC,CAAC,CAEF;AACA,MAAO,CAAAM,MAAM,CAACP,GAAG,CAACI,IAAI,GAAK,CACzBA,IAAI,CACJU,GAAG,CAAE,0CAA0CV,IAAI,EAAE,CACrDW,SAAS,CAAEF,QAAQ,CAACT,IAAI,CAACQ,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CACvD,CAAC,CAAC,CAAC,CACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}